{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import pandas as pd\
import numpy as np\
import matplotlib.pyplot as plt\
import seaborn as sns\
from scipy.stats import ttest_ind\
\
# Load example gene expression dataset (simulated)\
data = \{\
    'Gene': ['GeneA', 'GeneB', 'GeneC', 'GeneD', 'GeneE'],\
    'Control_1': [5.1, 2.4, 8.5, 3.2, 4.8],\
    'Control_2': [5.3, 2.1, 8.1, 3.4, 4.6],\
    'Control_3': [5.0, 2.5, 8.7, 3.1, 4.7],\
    'Treated_1': [8.2, 3.5, 10.8, 5.2, 7.1],\
    'Treated_2': [7.9, 3.6, 10.2, 5.0, 6.9],\
    'Treated_3': [8.4, 3.7, 11.0, 5.3, 7.2],\
\}\
\
# Convert to DataFrame\
df = pd.DataFrame(data)\
\
# Compute mean expression levels\
df['Control_Mean'] = df[['Control_1', 'Control_2', 'Control_3']].mean(axis=1)\
df['Treated_Mean'] = df[['Treated_1', 'Treated_2', 'Treated_3']].mean(axis=1)\
\
# Perform t-test for differential expression\
p_values = []\
for index, row in df.iterrows():\
    control_values = row[['Control_1', 'Control_2', 'Control_3']].values\
    treated_values = row[['Treated_1', 'Treated_2', 'Treated_3']].values\
    _, p_val = ttest_ind(control_values, treated_values)\
    p_values.append(p_val)\
df['p_value'] = p_values\
\
# Log fold change (LFC)\
df['log2FC'] = np.log2(df['Treated_Mean'] / df['Control_Mean'])\
\
# Volcano Plot\
plt.figure(figsize=(8, 6))\
sns.scatterplot(x=df['log2FC'], y=-np.log10(df['p_value']), hue=(df['p_value'] < 0.05))\
plt.axhline(y=-np.log10(0.05), linestyle='--', color='red')\
plt.xlabel('Log2 Fold Change')\
plt.ylabel('-Log10 p-value')\
plt.title('Volcano Plot of Differential Expression')\
plt.legend(['Significant', 'Not Significant'])\
plt.show()\
\
# Save results\
df.to_csv('gene_expression_results.csv', index=False)\
\
print("Analysis complete! Results saved in gene_expression_results.csv")\
}